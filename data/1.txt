Crustdata Discovery And Enrichment API
Crustdata Discovery And Enrichment API
Made with
Drag image to reposition
Crustdata Discovery And Enrichment API
Introduction
Getting Started
Obtaining Authorization Token
Data Dictionary
Company Endpoints
Enrichment: Company Data API
Company Discovery: Screening API
Additional examples
Company Identification API
Company Dataset API
All dataset endpoints
Search: LinkedIn Company Search API (real-time)
Building the Company/People Search Criteria Filter
Making Requests
LinkedIn Posts by Company API (real-time)
LinkedIn Posts Keyword Search (real-time)
People Endpoints
Enrichment: People Profile(s) API
Search: LinkedIn People Search API (real-time)
Making Requests
LinkedIn Posts by Person API (real-time)
LinkedIn Posts Keyword Search (real-time)
API Usage Endpoints
Get remaining credits
Introduction
The Crustdata API gives you programmatic access to firmographic and growth metrics data for companies across the
world from more than 16 datasets (Linkedin headcount, Glassdoor, Instagram, G2, Web Traffic, Apple App Store
Crustdata Discovery And Enrichment API
1
reviews, Google Play Store, News among others).
This documentation describes various available API calls and schema of the response. If you have any questions,
please reach out to abhilash@crustdata.com.

Getting Started
Obtaining Authorization Token
Reach out to abhilash@crustdata.com get an authorization token (API key) .

Data Dictionary
Crustdata Data Dictionary
Company Endpoints
Enrichment: Company Data API
Overview: This endpoint enriches company data by retrieving detailed information about one or multiple companies
using either their domain, name, or ID.
Required: authentication token auth_token for authorization.

Request
Parameters
company_domain: string (comma-separated list, up to 25 domains)
Description: The domain(s) of the company(ies) you want to retrieve data for.
Example: company_domain=hubspot.com,google.com
company_name: string (comma-separated list, up to 25 names; use double quotes if names contain commas)
Description: The name(s) of the company(ies) you want to retrieve data for.
Example: company_name="Acme, Inc.","Widget Co"
company_linkedin_url: string (comma-separated list, up to 25 URLs)
Description: The LinkedIn URL(s) of the company(ies).
Example: company_linkedin_url=https://linkedin.com/company/hubspot,https://linkedin.com/company/clay-hq
company_id: integer (comma-separated list, up to 25 IDs)
Description: The unique ID(s) of the company(ies) you want to retrieve data for.
Example: company_id=12345,67890
fields: string (comma-separated list of fields)
Description: Specifies the fields you want to include in the response. Supports nested fields up to a certain level.
Example: fields=company_name,company_domain,glassdoor.glassdoor_review_count
enrich_realtime: boolean (False by default)
Description: When True and the requested company is not present in Crustdata’s database, the company is enriched
within 10 minutes of the request
Using the fields Parameter
The fields parameter allows you to customize the response by specifying exactly which fields you want to retrieve. This
can help reduce payload size and improve performance.

Important Notes
Crustdata Discovery And Enrichment API
2
Nested Fields: You can specify nested fields up to the levels defined in the response structure (see Field Structure
below). Fields nested beyond the allowed levels or within lists (arrays) cannot be individually accessed.
Default Fields:
Top-Level Non-Object Fields: If you do not specify the fields parameter, the response will include all top-level nonobject fields by default (e.g., company_name, company_id).
Object Fields: By default, the response will not include object fields like decision_makers and founders.profiles, even if
you have access to them. To include these fields, you must explicitly specify them using the fields parameter.
User Permissions: Access to certain fields may be restricted based on your user permissions. If you request fields you
do not have access to, the API will return an error indicating unauthorized access.

Examples
Request by Company Domain:
Use Case: Ideal for users who have one or more company website domains and need to fetch detailed profiles.
Note: You can provide up to 25 domains in a comma-separated list.
Request:
Bash
Copy
curl 'https://api.crustdata.com/screener/company?company_domain=hubspot.com,google.com' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $token'
Request by Company Name:
Use Case: Suitable for users who have one or more company names and need to retrieve detailed profiles.
Note: You can provide up to 25 names in a comma-separated list. If a company name contains a comma, enclose the
name in double quotes.
Request:
Bash
Copy
curl 'https://api.crustdata.com/screener/company?company_name="HubSpot","Google, Inc."' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $token'
Request by Company LinkedIn URL:
Use Case: Suitable for users who have one or more company Linkedin urls and need to retrieve detailed profiles.
Note: You can provide up to 25 names in a comma-separated list. If a company name contains a comma, enclose the
name in double quotes.

Crustdata Discovery And Enrichment API
3
Request:
Bash
Copy
curl 'https://api.crustdata.com/screener/company?
company_linkedin_url=https://linkedin.com/company/hubspot,https://linkedin.com/company/clay-hq' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $token'
Request by Company ID:
Use Case: Suitable for users who have ingested one or more companies from Crustdata already and want to enrich
their data by Crustdata’s company_id. Users generally use this when they want time-series data for specific companies
after obtaining the company_id from the screening endpoint.
Note: You can provide up to 25 IDs in a comma-separated list.
Request:
Bash
Copy
curl 'https://api.crustdata.com/screener/company?company_id=631480,789001' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $token'
Request with Specific Fields
Use Case: Fetch only specific fields to tailor the response to your needs.
Request
Bash
Copy
curl 'https://api.crustdata.com/screener/company?
company_domain=swiggy.com&fields=company_name,headcount.linkedin_headcount' \
--header 'Authorization: Token $token' \
--header 'Accept: application/json'
More examples of Using fields parameter
Request with Realtime Enrichment
Crustdata Discovery And Enrichment API
4
Use Case: For companies not tracked by Crustdata, you want to enrich them within 10 minutes of the request
Shell
Copy
curl --location 'https://api.crustdata.com/screener/company?
company_linkedin_url=https://www.linkedin.com/company/usebramble&enrich_realtime=True' \
--header 'Accept: application/json, text/plain, /' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $token'
Response Structure
The response is a JSON array containing company objects. Below is the structure of the response up to the levels
where you can filter using the fields parameter.

Top-Level Fields
company_id: integer
company_name: string
linkedin_profile_url: string
linkedin_id: string
linkedin_logo_url: string
company_twitter_url: string
company_website_domain: string
hq_country: string
headquarters: string
largest_headcount_country: string
hq_street_address: string
company_website: string
year_founded: string (ISO 8601 date)
fiscal_year_end: string
estimated_revenue_lower_bound_usd: integer
estimated_revenue_higher_bound_usd: integer
employee_count_range: string
company_type: string
linkedin_company_description: string
acquisition_status: string or null
ceo_location: string
Nested Objects
You can filter up to the following nested levels:
all_office_addresses
array of strings
markets
array of strings
Crustdata Discovery And Enrichment API
5
stock_symbols
array of strings
taxonomy
linkedin_specialities: array of strings
linkedin_industries: array of strings
crunchbase_categories: array of strings
competitors
competitor_website_domains: array of strings or null
paid_seo_competitors_website_domains: array of strings
organic_seo_competitors_website_domains: array of strings
headcount
linkedin_headcount: integer
linkedin_headcount_total_growth_percent
mom: float
qoq: float
six_months: float
yoy: float
two_years: float
linkedin_headcount_total_growth_absolute
mom: float
qoq: float
six_months: float
yoy: float
two_years: float
linkedin_headcount_by_role_absolute: object
linkedin_headcount_by_role_percent: object
linkedin_role_metrics
all_roles: string
0_to_10_percent: string
11_to_30_percent: string
31_to_50_percent: string or null
51_to_70_percent: string or null
71_to_100_percent: string or null
linkedin_headcount_by_role_six_months_growth_percent: object
linkedin_headcount_by_role_yoy_growth_percent: object
linkedin_headcount_by_region_absolute: object
linkedin_headcount_by_region_percent: object
linkedin_region_metrics
all_regions: string
0_to_10_percent: string
11_to_30_percent: string
31_to_50_percent: string or null
Crustdata Discovery And Enrichment API
6
51_to_70_percent: string or null
71_to_100_percent: string or null
linkedin_headcount_by_skill_absolute: object
linkedin_headcount_by_skill_percent: object
linkedin_skill_metrics
all_skills: string
0_to_10_percent: string or null
11_to_30_percent: string
31_to_50_percent: string or null
51_to_70_percent: string or null
71_to_100_percent: string or null
linkedin_headcount_timeseries: array of objects (Cannot filter within this array)
linkedin_headcount_by_function_timeseries: object (Cannot filter within this object)
web_traffic
monthly_visitors: integer
monthly_visitor_mom_pct: float
monthly_visitor_qoq_pct: float
traffic_source_social_pct: float
traffic_source_search_pct: float
traffic_source_direct_pct: float
traffic_source_paid_referral_pct: float
traffic_source_referral_pct: float
monthly_visitors_timeseries: array of objects (Cannot filter within this array)
traffic_source_social_pct_timeseries: array of objects (Cannot filter within this array)
traffic_source_search_pct_timeseries: array of objects (Cannot filter within this array)
traffic_source_direct_pct_timeseries: array of objects (Cannot filter within this array)
traffic_source_paid_referral_pct_timeseries: array of objects (Cannot filter within this array)
traffic_source_referral_pct_timeseries: array of objects (Cannot filter within this array)
glassdoor
glassdoor_overall_rating: float
glassdoor_ceo_approval_pct: integer
glassdoor_business_outlook_pct: integer
glassdoor_review_count: integer
glassdoor_senior_management_rating: float
glassdoor_compensation_rating: float
glassdoor_career_opportunities_rating: float
glassdoor_culture_rating: float or null
glassdoor_diversity_rating: float or null
glassdoor_work_life_balance_rating: float or null
glassdoor_recommend_to_friend_pct: integer or null
glassdoor_ceo_approval_growth_percent
mom: float
qoq: float
Crustdata Discovery And Enrichment API
7
yoy: float
glassdoor_review_count_growth_percent
mom: float
qoq: float
yoy: float
g2
g2_review_count: integer
g2_average_rating: float
g2_review_count_mom_pct: float
g2_review_count_qoq_pct: float
g2_review_count_yoy_pct: float
linkedin_followers
linkedin_followers: integer
linkedin_follower_count_timeseries: array of objects (Cannot filter within this array)
linkedin_followers_mom_percent: float
linkedin_followers_qoq_percent: float
linkedin_followers_six_months_growth_percent: float
linkedin_followers_yoy_percent: float
funding_and_investment
crunchbase_total_investment_usd: integer
days_since_last_fundraise: integer
last_funding_round_type: string
crunchbase_investors: array of strings
last_funding_round_investment_usd: integer
funding_milestones_timeseries: array of objects (Cannot filter within this array)
job_openings
recent_job_openings_title: string or null
job_openings_count: integer or null
job_openings_count_growth_percent
mom: float or null
qoq: float or null
yoy: float or null
job_openings_by_function_qoq_pct: object
job_openings_by_function_six_months_growth_pct: object
open_jobs_timeseries: array of objects (Cannot filter within this array)
recent_job_openings: array of objects (Cannot filter within this array)
seo
average_seo_organic_rank: integer
monthly_paid_clicks: integer
monthly_organic_clicks: integer
average_ad_rank: integer
total_organic_results: integer or float
Crustdata Discovery And Enrichment API
8
monthly_google_ads_budget: integer or float
monthly_organic_value: integer
total_ads_purchased: integer
lost_ranked_seo_keywords: integer
gained_ranked_seo_keywords: integer
newly_ranked_seo_keywords: integer
founders
founders_locations: array of strings
founders_education_institute: array of strings
founders_degree_name: array of strings
founders_previous_companies: array of strings
founders_previous_titles: array of strings
profiles: array of objects (Cannot filter within this array)
decision_makers
decision_makers: array of objects (Cannot filter within this array)
news_articles
news_articles: array of objects (Cannot filter within this array)
Response
Examples
The response provides a comprehensive profile of the company, including firmographic details, social media links,
headcount data, and growth metrics.
For a detailed response data structure, refer to this JSON json_heroJSON Hero​
Key Points
Credits
Database Enrichment:
1 credits per company.
Real-Time Enrichment (enrich_realtime=True):
4+1 credits per company.

Enrichment Status
When you request data for a company not in our database, we start an enrichment process that takes up to 24 hours
(or 10 minutes if enrich_realtime is true).
The API response includes a status field:
enriching : The company is being processed, poll later to get the full company info
not_found : Enrichment failed (e.g., no website or employees). You can stop polling for this company.
JavaScript
Copy
Crustdata Discovery And Enrichment API
9
[
{
"status": "enriching",
"message": "The following companies will be enriched in the next 24 hours",
"companies": [
{
"identifier": "https://www.linkedin.com/company/123456",
"type": "linkedin_url"
}
]
}
]
Limitations on Nested Fields
Maximum Nesting Level: You can specify nested fields only up to the levels defined above
Default Exclusion of Certain Fields: Even if you have access to fields like decision_makers and founders.profiles, they
will not be included in the response by default when the fields parameter is not provided. You must explicitly request
these fields using the fields parameter.
Example:
Bash
Copy
# Will not include 'decision_makers' or 'founders.profiles' by default
curl 'https://api.crustdata.com/screener/company?company_id=123' \
--header 'Authorization: Token $token' \
--header 'Accept: application/json'
To include them, specify in fields:
Bash
Copy
curl 'https://api.crustdata.com/screener/company?company_id=123&fields=decision_makers,founders.profiles' \
--header 'Authorization: Token $token' \
--header 'Accept: application/json'
Unavailable Fields: If you request a field that is not available or beyond the allowed nesting level, the API will return an
error indicating that the field is not available for filtering.

Company Discovery: Screening API
Overview: The company screening API request allows you to screen and filter companies based on various growth and
firmographic criteria.
Required: authentication token auth_token for authorization.

Request
In the example below, we get companies that meet the following criteria:
Have raised > $5,000,000 in total funding AND
Crustdata Discovery And Enrichment API
10
Have headcount > 50 AND
Have largest headcount country as USA
cURL
Bash
Copy
curl 'https://api.crustdata.com/screener/screen/' \
-H 'Accept: application/json, text/plain,
/' \
-H 'Accept-Language: en-US,en;q=0.9' \
-H 'Authorization: Token $auth_token' \
-H 'Connection: keep-alive' \
-H 'Content-Type: application/json' \
-H 'Origin: https://crustdata.com' \
--data-raw '{
"metrics": [
{
"metric_name": "linkedin_headcount_and_glassdoor_ceo_approval_and_g2"
}
],
"filters": {
"op": "and",
"conditions": [
{
"column": "crunchbase_total_investment_usd",
"type": "=>",
"value": 5000000,
"allow_null": false
},
{
"column": "linkedin_headcount",
"type": "=>",
"value": 50,
"allow_null": false
},
{
"column": "largest_headcount_country",
"type": "(.)",
"value": "USA",
"allow_null": false
}
]
},
"hidden_columns": [],
"offset": 0,
"count": 100,
"sorts": []
}' \
--compressed
Crustdata Discovery And Enrichment API
11
Python
Python
Copy
import requests
headers = {
'Accept': 'application/json, text/plain, /',
'Accept-Language': 'en-US,en;q=0.9',
'Authorization': 'Token $auth_token',
# replace $auth_token
'Connection': 'keep-alive',
'Content-Type': 'application/json',
'Origin': 'https://crustdata.com'
}
json_data = {
'metrics': [
{
'metric_name': 'linkedin_headcount_and_glassdoor_ceo_approval_and_g2',
},
],
'filters': {
'op': 'and',
'conditions': [
{
'column': 'crunchbase_total_investment_usd',
'type': '=>',
'value': 5000000,
'allow_null': False,
},
{
'column': 'linkedin_headcount',
'type': '=>',
'value': 50,
'allow_null': False,
},
{
'column': 'largest_headcount_country',
'type': '(.)',
'value': 'USA',
'allow_null': False,
},
],
},
'hidden_columns': [],
'offset': 0,
'count': 100,
'sorts': []
}
response = requests.post('https://api.crustdata.com/screener/screen/', headers=headers, json=json_data)
Request Body Overview
The request body is a JSON object that contains the following parameters:
Crustdata Discovery And Enrichment API
12
Parameter
Description
Required
metrics
An array of metric objects containing the metric name. Value should always be
[{"metric_name": "linkedin_headcount_and_glassdoor_ceo_approval_and_g2"}]
Yes
filters
An object containing the filter conditions.

Yes
offset
The starting point of the result set. Default value is 0.

Yes
The number of results to return in a single request.
count
Maximum value is 100.

Yes
Default value is 100.
sorts
An array of sorting criteria.

No
Parameters:
metrics
Dictates the columns in the response. The only possible value is
Bash
Copy
[{"metric_name": "linkedin_headcount_and_glassdoor_ceo_approval_and_g2"}]
filters
Example:
JSON
Copy
{
"op": "and",
"conditions": [
{
"op": "or",
"conditions": [
{"hq_country", "type": "(.)", "value": "USA"},
{"hq_country", "type": "(.)", "value": "IND"}
],
}
{"column": "crunchbase_total_investment_usd", "type": "=>", "value": "5000000"},
{"column": "largest_headcount_country", "type": "(.)", "value": "USA"}
]
}
The filters object contains the following parameters:
Parameter
Description
Required
op
The operator to apply on the conditions. The value can be "and" or "or".

Yes
conditions
An array of complex filter objects or basic filter objects (see below)
Yes
conditions parameter
This has two possible types of values
Basic Filter Object
Example: {"column": "linkedin_headcount", "type": "=>", "value": "50" }
The object contains the following parameters:
Crustdata Discovery And Enrichment API
13
Parameter
Description
Required
column
The name of the column to filter.

Yes
type
The filter type. The value can be "=>", "=<", "=", "!=", “in”, “(.)”, “[.]”
Yes
value
The filter value.

Yes
allow_null
Whether to allow null values. The value can be "true" or "false". Default value is "false".

No
List of all column values
Crustdata Data Dictionary
List of all type values
applicable column
condition type
condition description
"=>"
Greater than or equal
number
"=<"
Lesser than or equal
number
"=",
Equal
number
“<”
Lesser than
number
“>”
Greater than
number
“(.)”
Contains, case insensitive
string
{ "column": "crunchbase_categories", "type": "(.)",
"value": "artificial intelligence"}
“[.]”
Contains, case sensitive
string
{ "column": "crunchbase_categories", "type": "[.]",
"value": "Artificial Intelligence"}
"!="
Not equals
number
“in”
Exactly matches atleast one of
the elements of list
string, number
types
example
{ "column": "linkedin_headcount", "type": "=>", "value":
"50"}
{ "column": "linkedin_headcount", "type": "=<", "value":
"50"}
{ "column": "linkedin_headcount", "type": "=", "value":
"50"}
{ "column": "linkedin_headcount", "type": "<", "value":
"50"}
{ "column": "linkedin_headcount", "type": ">", "value":
"50"}
{ "column": "company_id", "type": "in", "value": [123,
346. 564]}
Complex Filter Object
Example:
JSON
Copy
{
"op": "or",
"conditions": [
{"hq_country", "type": "(.)", "value": "USA"},
{"hq_country", "type": "(.)", "value": "IND"}
]
}
Same schema as the parent filters parameter
Crustdata Discovery And Enrichment API
14
Response
Example: json_heroJSON Hero​
The response is JSON object that consists of two main components: fields and rows.
fields: An array of objects representing the columns in the dataset.
rows: An array of arrays, each representing a row of data.
The values in each of the rows elements are ordered in the same sequence as the fields in the fields array. For
example, the ith value in a row corresponds to the ith field in the fields array.

Parsing the response
Given the following response object
JSON
Copy
{
"fields": [
{"type": "string", "api_name": "company_name", "hidden": false},
{"type": "number", "api_name": "valuation_usd", "hidden": false},
{"type": "number", "api_name": "crunchbase_total_investment_usd", "hidden": false},
{"type": "string", "api_name": "markets", "hidden": false},
{"type": "number", "api_name": "days_since_last_fundraise", "hidden": false},
{"type": "number", "api_name": "linkedin_headcount", "hidden": false},
{"type": "number", "api_name": "linkedin_headcount_mom_percent", "hidden": false}
],
"rows": [
["Sketch", null, 20000000, "PRIVATE", 1619, 258, -11.64]
]
}
The first element in rows (i.e. "Sketch") corresponds to fields[0]["api_name"] (i.e. "company_name").
The second element in rows (i.e. null) corresponds to fields[1]["api_name"] (i.e. "valuation_usd"), and so on.

Pseudo code for mapping fields → rows[i]
Here's a pseudo code to help understand this mapping:
Plain Text
Copy
for each row in rows:
for i in range(length(row)):
field_name = fields[i]["api_name"]
field_value = row[i]
# Map field_name to field_value
In simple terms:
For each row, iterate over each value.

Crustdata Discovery And Enrichment API
15
Map the ith value of the row to the ith api_name in the fields.
Here is the complete list of fields in the response for each company
Complete list of columns
company_name
company_website
company_website_domain
linkedin_profile_url
monthly_visitors
valuation_usd
crunchbase_total_investment_usd
markets
days_since_last_fundraise
linkedin_headcount
linkedin_headcount_mom_percent
linkedin_headcount_qoq_percent
linkedin_headcount_yoy_percent
linkedin_headcount_mom_absolute
linkedin_headcount_qoq_absolute
linkedin_headcount_yoy_absolute
glassdoor_overall_rating
glassdoor_ceo_approval_pct
glassdoor_business_outlook_pct
glassdoor_review_count
g2_review_count
g2_average_rating
company_id
hq_country
headquarters
largest_headcount_country
last_funding_round_type
valuation_date
linkedin_categories
linkedin_industries
crunchbase_investors
crunchbase_categories
acquisition_status
company_year_founded
technology_domains
founder_names_and_profile_urls
founders_location
ceo_location
founders_education_institute
Crustdata Discovery And Enrichment API
16
founders_degree_name
founders_previous_company
founders_previous_title
monthly_visitor_mom_pct
monthly_visitor_qoq_pct
traffic_source_social_pct
traffic_source_search_pct
traffic_source_direct_pct
traffic_source_paid_referral_pct
traffic_source_referral_pct
meta_total_ads
meta_active_ads
meta_ad_platforms
meta_ad_url
meta_ad_id
average_organic_rank
monthly_paid_clicks
monthly_organic_clicks
average_ad_rank
total_organic_results
monthly_google_ads_budget
monthly_organic_value
total_ads_purchased
lost_ranks
gained_ranks
newly_ranked
paid_competitors
organic_competitors
linkedin_followers
linkedin_headcount_engineering
linkedin_headcount_sales
linkedin_headcount_operations
linkedin_headcount_human_resource
linkedin_headcount_india
linkedin_headcount_usa
linkedin_headcount_engineering_percent
linkedin_headcount_sales_percent
linkedin_headcount_operations_percent
linkedin_headcount_human_resource_percent
linkedin_headcount_india_percent
linkedin_headcount_usa_percent
linkedin_followers_mom_percent
linkedin_followers_qoq_percent
Crustdata Discovery And Enrichment API
17
linkedin_followers_yoy_percent
linkedin_all_employee_skill_names
linkedin_all_employee_skill_count
linkedin_employee_skills_0_to_10_pct
linkedin_employee_skills_11_to_30_pct
linkedin_employee_skills_31_to_50_pct
linkedin_employee_skills_51_to_70_pct
linkedin_employee_skills_71_to_100_pct
glassdoor_culture_rating
glassdoor_diversity_rating
glassdoor_work_life_balance_rating
glassdoor_senior_management_rating
glassdoor_compensation_rating
glassdoor_career_opportunities_rating
glassdoor_recommend_to_friend_pct
glassdoor_ceo_approval_mom_pct
glassdoor_ceo_approval_qoq_pct
glassdoor_ceo_approval_mom_pct.1
glassdoor_review_count_mom_pct
glassdoor_review_count_qoq_pct
glassdoor_review_count_yoy_pct
g2_review_count_mom_pct
g2_review_count_qoq_pct
g2_review_count_yoy_pct
instagram_followers (deprecated)
instagram_posts (deprecated)
instagram_followers_mom_pct (deprecated)
instagram_followers_qoq_pct (deprecated)
instagram_followers_yoy_pct (deprecated)
recent_job_openings_title
recent_job_openings_title_count
job_openings_count
job_openings_count_mom_pct
job_openings_count_qoq_pct
job_openings_count_yoy_pct
job_openings_accounting_qoq_pct
job_openings_accounting_six_months_growth_pct
job_openings_art_and_design_qoq_pct
job_openings_art_and_design_six_months_growth_pct
job_openings_business_development_qoq_pct
job_openings_business_development_six_months_growth_pct
job_openings_engineering_qoq_pct
job_openings_engineering_six_months_growth_pct
Crustdata Discovery And Enrichment API
18
job_openings_finance_qoq_pct
job_openings_finance_six_months_growth_pct
job_openings_human_resource_qoq_pct
job_openings_human_resource_six_months_growth_pct
job_openings_information_technology_qoq_pct
job_openings_information_technology_six_months_growth_pct
job_openings_marketing_qoq_pct
job_openings_marketing_six_months_growth_pct
job_openings_media_and_communication_qoq_pct
job_openings_media_and_communication_six_months_growth_pct
job_openings_operations_qoq_pct
job_openings_operations_six_months_growth_pct
job_openings_research_qoq
Additional examples
Crustdata Company Screening API Detailed Examples
Company Identification API
Given a company’s name, website or LinkedIn profile, you can identify the company in Crustdata’s database with
company identification API
The input to this API is any combination of the following fields
name of the company
website of the company
LinkedIn profile url of the company
Request
Bash
Copy
curl 'https://api.crustdata.com/screener/identify/' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $api_token' \
--header 'Connection: keep-alive' \
--header 'Content-Type: application/json' \
--header 'Origin: https://crustdata.com' \
--data '{"query_company_website": "serverobotics.com", "count": 1}'
Payload fields (at least one of the query fields required):
query_company_name : name of the company
query_company_website : website of the company
query_company_linkedin_url : LinkedIn profile url of the company
count : maximum number of results. Default is 10.

Crustdata Discovery And Enrichment API
19
Result
Example:
Bash
Copy
[
{
"company_id": 628895,
"company_name": "Serve Robotics",
"company_website_domain": "serverobotics.com",
"company_website": "http://www.serverobotics.com",
"linkedin_profile_url": "https://www.linkedin.com/company/serverobotics",
"linkedin_headcount": 82,
"acquisition_status": null,
"score": 0.3
}
]
Each item in the result corresponds to a company record in Crustdata’s database. The records are ranked by the
matching score, highest first. The score is maximum when all the query fields are provided and their values exactly
matches the value of the corresponding company in Crustdata’s database.
Each result record contains the following fields for the company
company_id : A unique identifier for the company in Crustdata’s database.
company_name : Name of the company in Crustdata’s database
company_website_domain : Website domain of the company as mentioned on its Linkedin page
company_website : Website of the company
linkedin_profile_url : LinkedIn profile url for the company
linkedin_headcount : Latest headcount of the company in Crustdata’s database
acquisition_status : Either acquired or null
score : a relative score based on the query parameters provided and how well they match the company fields in
Crustdata’s database
Company Dataset API
Overview: The Company Dataset API allows users to retrieve specific datasets related to companies, such as job
listings, decision makers, news articles, G2 etc.

Request Example (Job Listings)
All dataset endpoints
Crustdata Dataset API Detailed Examples
Search: LinkedIn Company Search API (real-time)
Overview: Search for company profiles using either directly a LinkedIn Sales Navigator accounts search URL or a
custom search criteria as a filter. This endpoint allows you to retrieve detailed information about companies matching
specific criteria.
Each request returns up-to 25 results. To paginate, update the page number of the Sales Navigator search URL and do
the request again.

Crustdata Discovery And Enrichment API
20
In the request payload, either set the url of the Sales Navigator Accounts search from your browser in the parameter
linkedin_sales_navigator_search_url or specify the search criteria as a JSON object in the parameter filters
Required: authentication token auth_token for authorization.

Building the Company/People Search Criteria Filter
Based on the field on you are filtering, filters can be categorized into 3 different categories
Text Filter
Range Filter
Boolean Filter
And here is the full dictionary for filter attributes and possible values you can pass:
Filter Dictionary for Company Search
Filter Dictionary for Person Search
Making Requests
Request:
Response:
Key points:
LinkedIn Posts by Company API (real-time)
Overview: This endpoint retrieves recent LinkedIn posts and related engagement metrics for a specified company.
Each request returns up-to 5 results per page. To paginate, increment the page query param.
Required: authentication token auth_token for authorization.

Request
Response
Key Points
LinkedIn Posts Keyword Search (real-time)
Crustdata Discovery And Enrichment API
21
Overview: This endpoint retrieves LinkedIn posts containing specified keywords along with related engagement
metrics.
Each request returns 5 posts per page. To paginate, increment the page in the payload.
Required: authentication token auth_token for authorization.

Request
Response:
Key Points
People Endpoints
Enrichment: People Profile(s) API
Overview: Enrich data for one or more individuals using LinkedIn profile URLs or business email addresses. This API
allows you to retrieve enriched person data from Crustdata’s database or perform a real-time search from the web if
the data is not available.
Key Features:
Enrich data using LinkedIn profile URLs or business email addresses (3 credit per profile/email)
Option to perform a real-time search if data is not present in the database (5 credit per profile/email)
Retrieve data for up to 25 profiles or emails in a single request.
Required: authentication token auth_token for authorization.

Request:
Query Parameters
linkedin_profile_url (optional): Comma-separated list of LinkedIn profile URLs.
Example: linkedin_profile_url=https://www.linkedin.com/in/johndoe/,https://www.linkedin.com/in/janedoe/
Python
Copy
curl 'https://api.crustdata.com/screener/person/enrich?
linkedin_profile_url=https://www.linkedin.com/in/dtpow/,https://www.linkedin.com/in/janedoe/' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $auth_token'
business_email (optional): Person business email address.
Note:- You can only provide one business email address per request
Example: business_email=john.doe@example.com
Python
Copy
Crustdata Discovery And Enrichment API
22
curl 'https://api.crustdata.com/screener/person/enrich?business_email=john.doe@example.com' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $auth_token'
enrich_realtime (optional): Boolean (True or False). If set to True, performs a real-time search from the web if data is
not found in the database.
Default: False
Example:
Python
Copy
curl 'https://api.crustdata.com/screener/person/enrich?
linkedin_profile_url=https://www.linkedin.com/in/dtpow/,https://www.linkedin.com/in/janedoe/&enrich_realtime=True' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $auth_token'
fields (optional): string (comma-separated list of fields). Specifies the fields you want to include in the response.

Possible Values
Example: fields=all_degrees,education_background
Notes:
Mandatory Parameters: You must provide either linkedin_profile_url or business_email. Do not include both in the same
request.
Formatting: Multiple URLs or emails should be comma-separated. Extra spaces or tabs before or after commas are
ignored.
Multiple LinkedIn profile URLs should be separated by commas. Extra spaces or tabs before or after commas will be
ignored.

Fields
If you don’t use fields, you will get all the fields in response except all_connections,
linkedin_open_to_cards,certifications , honors & education_background.activities_and_societies
Access to certain fields may be restricted based on your user permissions. If you request fields you do not have access
to, the API will return an error indicating unauthorized access.
Top level non-object fields are present in response irrespective of fields.
Don’t include metadata fields : enriched_realtime, score and query_linkedin_profile_urn_or_slug in fields
Examples
1. Request with all fields:
Usecase: Ideal for users who wants to access all fields which are not provided by default
Bash
Crustdata Discovery And Enrichment API
23
Copy
curl -X GET "https://api.crustdata.com/screener/person/enrich?
linkedin_profile_url=https://www.linkedin.com/in/sasikumarm00&enrich_realtime=true&fields=linkedin_profile_url,linkedi
\
-H "Authorization: Token auth_token" \,
-H "Content-Type: application/json"
2. Request with all default fields AND education_background.activities_and_societies:
3. Request with all default fields AND certifications , honors and linkedin_open_to_cards :
4. Request without fields:
5. Request with business email:
Response:
Key points:
Search: LinkedIn People Search API (real-time)
Overview: Search for people profiles based on either a direct LinkedIn Sales Navigator search URL or a custom search
criteria as a filter. This endpoint allows you to retrieve detailed information about individuals matching specific criteria.
Each request returns upto 25 results. To paginate, update the page number of the Sales Navigator search URL and do
the request again.
In the request payload, either set the url of the Sales Navigator Leads search from your browser in the parameter
linkedin_sales_navigator_search_url or specify the search criteria as a JSON object in the parameter filters
Required: authentication token auth_token for authorization.

Making Requests
Request:
Response:
Response with preview
Key points:
Credits: Each successful page request costs 25 credits. With preview , a successful request costs 5 credits.
Pagination: If the total number of results for the query is more than 25 (value of total_display_count param), you can
paginate the response in the following ways (depending on your request)
Crustdata Discovery And Enrichment API
24
When passing linkedin_sales_navigator_search_url :
adding page query param to linkedin_sales_navigator_search_url . For example, to get data on nth page,
linkedin_sales_navigator_search_url would become https://www.linkedin.com/sales/search/people?page=n&query=... .

Example request with page=2
When passing filters :
provide page as one of the keys in the payload itself
Example request with page=1
Each page returns upto 25 results. To fetch all the results from a query, you should keep on iterating over pages until
you cover the value of total_display_count in the response from first page.
Latency: The data is fetched in real-time from Linkedin and the latency for this endpoint is between 10 to 30 seconds.
Response schema: Because the data is fetched realtime, and the results may not be in Crustdata’s database already,
the response schema will be different from person enrichment endpoint screener/people/enrich . But all the results will
be added to Crustdata’s database in 10 min of your query and the data for a specific person profile can be enriched via
person enrichment endpoint
LinkedIn Posts by Person API (real-time)
Overview: This endpoint retrieves recent LinkedIn posts and related engagement metrics for a specified person.
Each request returns up-to 5 results per page. To paginate, increment the page query param.
Required: authentication token auth_token for authorization.

Request
Use Case: Ideal for users who want to fetch recent LinkedIn posts and engagement data for a specific company.
Note: You can provide one company LinkedIn URL per request.
Request Parameters:
person_linkedin_url (required): LinkedIn profile url of the person. For example, any of these formats work
https://linkedin.com/in/abhilash-chowdhary (flagship url) or
https://linkedin.com/in/ACoAAAAsKtMBHQPJ9rgxpUs8M6pSxrAYCXIX8oY (fsd_profile url)
fields (optional): comma separated list of fields which you want to get in response.
page (optional, default: 1): Page number for pagination
limit (optional, default: 5): Limit the number of posts in a page
post_types (optional, default: repost, original)
Example Request:
With default fields (without reactors)
With default fields and reactors
Crustdata Discovery And Enrichment API
25
With default post_types
Response
The response provides a list of recent LinkedIn posts for the specified company, including post content, engagement
metrics, and information about users who interacted with the posts.
Full sample: jsonhero.io​
Response Structure:
JSON
Copy
{
"posts": [
{
"backend_urn": "urn:li:activity:7236812027275419648",
"share_urn": "urn:li:share:7236812026038083584",
"share_url": "https://www.linkedin.com/posts/crustdata_y-combinators-most-popular-startups-from-activity7236812027275419648-4fyw?utm_source=combined_share_message&utm_medium=member_desktop",
"text": "Y Combinator’s most popular startups.\nFrom the current S24 batch.\n\nHow do you gauge the buzz around
these startups when most are pre-product?\n\nWe’ve defined web traffic as the metric to go by.\n\nHere are the most
popular startups from YC S24: \n\n𝟭. 𝗡𝗲𝘅𝘁𝗨𝗜: Founded by Junior Garcia\n𝟮. 𝗪𝗼𝗿𝗱𝘄𝗮𝗿𝗲: Filip Kozera, Robert
Chandler\n𝟯. 𝗨𝗻𝗿𝗶𝗱𝗱𝗹𝗲: Naveed Janmohamed\n𝟰. 𝗨𝗻𝗱𝗲𝗿𝗺𝗶𝗻𝗱: Thomas Hartke, Joshua Ramette\n𝟱. 𝗖𝗼𝗺𝗳𝘆𝗱𝗲𝗽𝗹𝗼𝘆:
Nick Kao, Benny Kok\n𝟲. 𝗕𝗲𝗲𝗯𝗲𝘁𝘁𝗼𝗿: Jordan Murphy, Matthew Wolfe\n𝟳. 𝗠𝗲𝗿𝘀𝗲: Kumar A., Mark Rachapoom\n𝟴.
𝗟𝗮𝗺𝗶𝗻𝗮𝗿: Robert Kim, Din Mailibay, Temirlan Myrzakhmetov\n𝟵. 𝗠𝗶𝘁𝗼𝗛𝗲𝗮𝗹𝘁𝗵: Kenneth Lou, Tee-Ming C., Joel Kek, Ryan
Ware\n𝟭𝟬. 𝗔𝘂𝘁𝗮𝗿𝗰: Etienne-Noel Krause,Thies Hansen, Marius Seufzer\n\n Interested in reading more about the YC
S24 batch?\n\nRead our full breakdown from the link in the comments
"actor_name": "Crustdata",
🤔
👇",
"hyperlinks": {
"company_linkedin_urls": [],
"person_linkedin_urls": [
"https://www.linkedin.com/in/ACoAAAKoldoBqSsiXY_DHsXdSk1slibabeTvDDY"
],
"other_urls": []
},
"date_posted": "2024-09-03",
"total_reactions": 37,
"total_comments": 7,
"reactions_by_type": {
"LIKE": 28,
"EMPATHY": 4,
"PRAISE": 4,
"INTEREST": 1
},
"num_shares": 5,
"is_repost_without_thoughts": false,
"reactors": [
{
"name": "Courtney May",
Crustdata Discovery And Enrichment API
26
"linkedin_profile_url": "https://www.linkedin.com/in/ACwAACkMyzkBYncrCuM2rzhc06iz6oj741NL-98",
"reaction_type": "LIKE",
"profile_image_url": "https://media.licdn.com/dms/image/v2/D5603AQF-8vL_c5H9Zg/profile-displayphotoshrink_100_100/profile-displayphoto-shrink_100_100/0/1690558480623?
e=1730937600&v=beta&t=Lm2hHLTFiEVlHWdTt-Vh3vDYevK8U8SlPqaFdNu3R6A",
"title": "GTM @ Arc (YC W22)",
"additional_info": "3rd+",
"location": "San Francisco, California, United States",
"linkedin_profile_urn": "ACwAACkMyzkBYncrCuM2rzhc06iz6oj741NL-98",
"default_position_title": "GTM @ Arc (YC W22)",
"default_position_company_linkedin_id": "74725230",
"default_position_is_decision_maker": false,
"flagship_profile_url": "https://www.linkedin.com/in/courtney-may-8a178b172",
"profile_picture_url": "https://media.licdn.com/dms/image/v2/D5603AQF-8vL_c5H9Zg/profile-displayphotoshrink_400_400/profile-displayphoto-shrink_400_400/0/1690558480623?
e=1730937600&v=beta&t=vHg233746zA00m3q2vHKSFcthL3YKiagTtVEZt1qqJI",
"headline": "GTM @ Arc (YC W22)",
"summary": null,
"num_of_connections": 786,
"related_colleague_company_id": 74725230,
"skills": [
"Marketing Strategy",
"Product Support",
"SOC 2",
...
],
"employer": [
{
"title": "GTM @ Arc (YC W22)",
"company_name": "Arc",
"company_linkedin_id": "74725230",
"start_date": "2024-07-01T00:00:00",
"end_date": null,
"description": null,
"location": "San Francisco, California, United States",
"rich_media": []
},
{
"title": "Product Marketing & Operations Lead",
"company_name": "Bits of Stock™",
"company_linkedin_id": "10550545",
"start_date": "2023-03-01T00:00:00",
"end_date": "2024-07-01T00:00:00",
"description": "● Spearheaded SOC 2 Certification and oversaw compliance organization for internal and external
needs.\n● Leads a weekly operations call to manage customer support, new user onboarding, and other outstanding
operational matters.\n● Wrote & launched: Product Blog with 6 different featured pieces; 2 Pricing Thought-Leadership
pieces; & 2 Partner Press Releases; two of which were featured in the WSJ.\n● Managed marketing and logistics for 11
conferences and events all over the world, producing over 150 B2B qualified leads.\n● Created a company-wide
marketing strategy and implemented it across the blog, LinkedIn, & Twitter leading to a 125% increased engagement
rate & a 29% increase in followers.\n● Aided in sales and partner relations by preparing a Partner Marketing Guide,
creating the user support section of the website and inbound email system, and investing education guide.",
"location": "San Francisco Bay Area",
"rich_media": []
},
...
],
"education_background": [
{
Crustdata Discovery And Enrichment API
27
"degree_name": "Bachelor of Applied Science - BASc",
"institute_name": "Texas Christian University",
"field_of_study": "Economics",
"start_date": "2016-01-01T00:00:00",
"end_date": "2020-01-01T00:00:00"
}
],
"emails": [
"email@example.com"
],
"websites": [],
"twitter_handle": null,
"languages": [],
"pronoun": null,
"current_title": "GTM @ Arc (YC W22)"
}, ...
]
}
]
}
Each item in the posts array contains the following fields:
backend_urn (string): Unique identifier for the post in LinkedIn's backend system.
share_urn (string): Unique identifier for the shared content.
share_url (string): Direct URL to the post on LinkedIn.
text (string): The full content of the post.
actor_name (string): Name of the company or person who created the post.
date_posted (string): Date when the post was published, in "YYYY-MM-DD" format.
hyperlinks (object): Contains the external links and Company/Person LinkedIn urls mentioned in the post
company_linkedin_urls (array): List of Company LinkedIn urls mentioned in the post
person_linkedin_urls (array): List of Person LinkedIn urls mentioned in the post
total_reactions (integer): Total number of reactions on the post.
total_comments (integer): Total number of comments on the post.
reactions_by_type (object): Breakdown of reactions by type.
Possible types include: "LIKE", "EMPATHY", "PRAISE", "INTEREST", etc.
Each type is represented by its count (integer).
linkedin_headcount_and_glassdoor_ceo_approval_and_g2
num_shares (integer): Number of times the post has been shared.
reactors (array): List of users who reacted to the post. Each reactor object contains:
name (string): Full name of the person who reacted.
linkedin_profile_url (string): URL to the reactor's LinkedIn profile.
reaction_type (string): Type of reaction given (e.g., "LIKE", "EMPATHY").
profile_image_url (string): URL to the reactor's profile image (100x100 size).
title (string): Current professional title of the reactor.
additional_info (string): Additional information, often indicating connection degree.
location (string): Geographic location of the reactor.
linkedin_profile_urn (string): Unique identifier for the reactor's LinkedIn profile.
default_position_title (string): Primary job title.

Crustdata Discovery And Enrichment API
28
default_position_company_linkedin_id (string): LinkedIn ID of the reactor's primary company.
default_position_is_decision_maker (boolean): Indicates if the reactor is in a decision-making role.
flagship_profile_url (string): Another form of the reactor's LinkedIn profile URL.
profile_picture_url (string): URL to a larger version of the profile picture (400x400 size).
headline (string): Professional headline from the reactor's LinkedIn profile.
summary (string or null): Brief professional summary, if available.
num_of_connections (integer): Number of LinkedIn connections the reactor has.
related_colleague_company_id (integer): LinkedIn ID of a related company, possibly current employer.
skills (array of strings): List of professional skills listed on the reactor's profile.
employer (array of objects): Employment history, each containing:
title (string): Job title.
company_name (string): Name of the employer.
company_linkedin_id (string or null): LinkedIn ID of the company.
start_date (string): Start date of employment in ISO format.
end_date (string or null): End date of employment in ISO format, or null if current.
description (string or null): Job description, if available.
location (string or null): Job location.
rich_media (array): Currently empty, may contain media related to the job.
education_background (array of objects): Educational history, each containing:
degree_name (string): Type of degree obtained.
institute_name (string): Name of the educational institution.
field_of_study (string): Area of study.
start_date (string): Start date of education in ISO format.
end_date (string): End date of education in ISO format.
emails (array of strings): Known email addresses associated with the reactor.
websites (array): Currently empty, may contain personal or professional websites.
twitter_handle (string or null): Twitter username, if available.
languages (array): Currently empty, may contain languages spoken.
pronoun (string or null): Preferred pronouns, if specified.
current_title (string): Current job title, often identical to default_position_title.

Key Points
Credits:
Without reactors (default): Each successful page request costs 5 credits
With reactors: Each successful page request costs 25 credits
Pagination:
Increment the value of page query param to fetch the next set of posts.
Most recent posts will be in first page and then so on.
Currently, you can only fetch only upto 20 pages of latest posts. In case you want to fetch more, contact Crustdata
team at info@crustdata.com .
External urls or Company/Person LinkedIn urls mentioned in text:
hyperlinks contains list of links (categorized as company_linkedin_urls , person_linkedin_urls and other_urls ) mentioned
in the post
Crustdata Discovery And Enrichment API
29
Latency: The data is fetched in real-time from Linkedin and the latency for this endpoint is between 30 to 60 seconds
depending on number of reactions for all the posts in the page
LinkedIn Posts Keyword Search (real-time)
API Usage Endpoints
Get remaining credits
Request
A plain GET request without any query params.
Required: authentication token auth_token for user identification.
JSON
Copy
curl --location 'https://api.crustdata.com/user/credits' \
--header 'Accept: application/json, text/plain, */*' \
--header 'Accept-Language: en-US,en;q=0.9' \
--header 'Authorization: Token $auth_token' \
--header 'Content-Type: application/json'
Response
Returns the remaining credits for the current billing period
JSON
Copy
{
"credits": 1000000
}
Crustdata Discovery And Enrichment API
30
